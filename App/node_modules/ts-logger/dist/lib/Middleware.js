"use strict";
var onFinished = require("on-finished");
var uuid = require("node-uuid");
var HttpContext_1 = require("./HttpContext");
var Logger_1 = require("./Logger");
/**
 * Middleware
 */
function middleware() {
    var logger = new Logger_1.default();
    return function (req, res, next) {
        var startTime = new Date().getTime();
        var ctx = new HttpContext_1.default(req, res);
        req.access_uuid = uuid.v4();
        logger.info("[" + req.access_uuid + "] <== \"" + ctx.method() + " " + ctx.url() + "\" " + ctx.remoteAddr() + " HTTP/" + ctx.httpVersion() + " " + ctx.userAgent());
        onFinished(res, function (err, res) {
            var reqTime = ((new Date().getTime()) - startTime) / 1000;
            // _debugger.info(`${ctx.remoteAddr()}- "${ctx.method()} ${ctx.url()} HTTP/${ctx.httpVersion()}" ${ctx.status()} ${ctx.resHeader('content-length')} ${ctx.userAgent()}`);
            logger.info("[" + req.access_uuid + "] ==>  " + ctx.status() + " length:" + ctx.resHeader('content-length') + " time:" + reqTime + "s");
            if (err) {
                logger.warn("detected error comming from \"onFinished\" on logger.middleware module: " + err.message);
                logger.error(err);
            }
        });
        next();
    };
}
exports.middleware = middleware;
